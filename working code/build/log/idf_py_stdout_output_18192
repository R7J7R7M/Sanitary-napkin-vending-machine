[1/10] Performing build step for 'bootloader'
[1/1] C:\WINDOWS\system32\cmd.exe /C "cd /D "E:\Commercial product\SNV\Sanitary-napkin-vending-machine\working code\build\bootloader\esp-idf\esptool_py" && E:\Espressif_5.4.1\Espressif\python_env\idf5.4_py3.11_env\Scripts\python.exe E:/Espressif_5.4.1/Espressif/frameworks/esp-idf-v5.4.1/components/partition_table/check_sizes.py --offset 0x8000 bootloader 0x0 "E:/Commercial product/SNV/Sanitary-napkin-vending-machine/working code/build/bootloader/bootloader.bin""
Bootloader binary size 0x5220 bytes. 0x2de0 bytes (36%) free.
[2/10] Building C object esp-idf/main/CMakeFiles/__idf_main.dir/vending_parameters.c.obj
[3/10] No install step for 'bootloader'
[4/10] Completed 'bootloader'
[5/10] Building C object esp-idf/main/CMakeFiles/__idf_main.dir/SNV_main.c.obj
[6/10] Linking C static library esp-idf\main\libmain.a
[7/10] Generating ld/sections.ld
[8/10] Linking CXX executable blink.elf
[9/10] Generating binary image from built executable
esptool.py v4.8.1
Creating esp32s3 image...
Merged 2 ELF sections
Successfully created esp32s3 image.
Generated E:/Commercial product/SNV/Sanitary-napkin-vending-machine/working code/build/blink.bin
[10/10] C:\WINDOWS\system32\cmd.exe /C "cd /D "E:\Commercial product\SNV\Sanitary-napkin-vending-machine\working code\build\esp-idf\esptool_py" && E:\Espressif_5.4.1\Espressif\python_env\idf5.4_py3.11_env\Scripts\python.exe E:/Espressif_5.4.1/Espressif/frameworks/esp-idf-v5.4.1/components/partition_table/check_sizes.py --offset 0x8000 partition --type app "E:/Commercial product/SNV/Sanitary-napkin-vending-machine/working code/build/partition_table/partition-table.bin" "E:/Commercial product/SNV/Sanitary-napkin-vending-machine/working code/build/blink.bin""
blink.bin binary size 0x32700 bytes. Smallest app partition is 0x100000 bytes. 0xcd900 bytes (80%) free.
